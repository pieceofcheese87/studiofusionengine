<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiailze menu variables

fileSelected = false; //False if selecting a file, true if selecting difficulty
savefileSelect = global.menuSelectPrev[0]; 
difficultySelect = 0; //-1 is Load Game, 0+ are difficulties
warningShow = false; //Confirmation text for overwriting a savefile
warningSelectYes = true;
 
str[0] = "Save 1";
str[1] = "Save 2";
str[2] = "Save 3";

xSeparation = 240;
animationIndex = 0;

//Load save file values
for (var i = 0; i &lt; 3; i++)
{
    if (file_exists("Data\save" + string(i+1)))  //Check if current save exists
    {
        //Load save data
        exists[i] = true;
        
        //Load the save map
        var saveMap;
        
        if (global.extraSaveProtection) //Use ds_map_secure function
        {
            saveMap = ds_map_secure_load("Data\save" + string(i+1));
        }
        else    //Use text file
        {
            var f = file_text_open_read("Data\save" + string(i+1));
            saveMap = json_decode(base64_decode(file_text_read_string(f)));
            file_text_close(f);
        }
        
        if (saveMap != -1)  //Check if the save map loaded correctly
        {
            death[i] = saveMap[? "death"];
            if (is_undefined(death[i])) //Check for undefined value in case the save was messed with or got corrupted
            {
                death[i] = 0;
            }
            
            time[i] = saveMap[? "time"];
            if (is_undefined(time[i]))
            {
                time[i] = 0;
            }
    
            difficulty[i] = saveMap[? "difficulty"];
            if (is_undefined(difficulty[i]))
            {
                difficulty[i] = 0;
            }
            
            for (var j = 0; j &lt; 8; j++)
            {
                boss[j,i] = saveMap[? "bossItem" + string(j) + ""];
                if (is_undefined(boss[j, i]))
                {
                    boss[j,i] = false;
                }
            }
            
            clear[i] = saveMap[? "gameClear"];
            if (is_undefined(clear[i]))
            {
                clear[i] = false;
            }
            
            ds_map_destroy(saveMap);
        }
        else
        {
            //Save map didn't load correctly, set the variables to the defaults
            death[i] = 0;
            time[i] = 0;
            difficulty[i] = 0;
            for (var j = 0; j &lt; 8; j++)
            {
                boss[j,i] = false;
            }
            clear[i] = false;
        }
    }
    else
    {
        exists[i] = false;
        death[i] = 0;
        time[i] = 0;
    }
    
    var t = time[i];
    
    timeStr[i] = string(t div 3600) + ":";
    t = t mod 3600;
    timeStr[i] += string(t div 600);
    t = t mod 600;
    timeStr[i] += string(t div 60) + ":";
    t = t mod 60;
    timeStr[i] += string(t div 10);
    t = t mod 10;
    timeStr[i] += string(floor(t));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Navigate menu

animationIndex++;

if (scrButtonCheckPressed(KEY.MENU_OPTIONS))
{
    global.menuSelectPrev[0] = savefileSelect;
    room_goto(rOptions);
    exit;
}

//Select which savefile or return to title
if (!fileSelected)
{
    if (scrButtonCheckPressed(KEY.MENU_LEFT))
    {
        audio_play_sound(global.menuSound, 0, false);
        savefileSelect -= 1;
        if (savefileSelect &lt; 0)
            savefileSelect = 2;
    }
    else if (scrButtonCheckPressed(KEY.MENU_RIGHT))
    {
        audio_play_sound(global.menuSound, 0, false);
        savefileSelect += 1;
        if (savefileSelect &gt; 2)
            savefileSelect = 0;
    }
    else if (scrButtonCheckPressed(KEY.MENU_BACK))
    {
        global.menuSelectPrev[0] = 0;
        room_goto(rTitle);
    }
    else if (scrButtonCheckPressed(KEY.MENU_ACCEPT))
    {
        if (global.menuMode == 0)   //Difficulty select room
        {
            global.savenum = savefileSelect+1;
            room_goto(rDifficultySelect);
        }
        else    //Difficulty select menu
        {
            fileSelected = true;
            if (exists[savefileSelect]) //Default to Load game if file exists
                difficultySelect = -1;
            else
                difficultySelect = 0;
        }
    }
}
//Select option in savefile
else
{
    if (!warningShow)    //Not currently showing yes/no confirmation
    {                                                                                            
        if (scrButtonCheckPressed(KEY.MENU_LEFT))
        {
            audio_play_sound(global.menuSound, 0, false);
            difficultySelect -= 1;
            difficultySelect = scrWrapInRange(difficultySelect, -exists[savefileSelect], global.difficultyCount - 1);
        }
        else if (scrButtonCheckPressed(KEY.MENU_RIGHT))
        {
            audio_play_sound(global.menuSound, 0, false);
            difficultySelect += 1;
            difficultySelect = scrWrapInRange(difficultySelect, -exists[savefileSelect], global.difficultyCount - 1);
        }
        else if (scrButtonCheckPressed(KEY.MENU_BACK))
        {
            fileSelected = false;
        }
        else if (scrButtonCheckPressed(KEY.MENU_ACCEPT))
        {
            global.savenum = savefileSelect+1;
            
            if (difficultySelect == -1)    //Load game
            {
                if (file_exists("Data\save" + string(global.savenum)))
                    scrLoadGame(true);
            }
            else    //Starts new game
            {
                if (!file_exists("Data\save" + string(global.savenum)))
                {
                    scrStartNewGame(difficultySelect);
                }
                else
                {
                    warningShow = true;
                    warningSelectYes = true;
                }
            }
        }
    }
    else
    {
        if (scrButtonCheckPressed(KEY.MENU_LEFT))
        {
            audio_play_sound(global.menuSound, 0, false);
            warningSelectYes = !warningSelectYes;
        }
        else if (scrButtonCheckPressed(KEY.MENU_RIGHT))
        {
            audio_play_sound(global.menuSound, 0, false);
            warningSelectYes = !warningSelectYes;
        }
        else if (scrButtonCheckPressed(KEY.MENU_BACK))
        {
            warningShow = false;
        }
        else if (scrButtonCheckPressed(KEY.MENU_ACCEPT))
        {
            if (warningSelectYes)
            {
                scrStartNewGame(difficultySelect);
            }
            else
            {
                warningShow = false;
            }
        }
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw all save info text

for(var i = 0; i &lt; 3; i++)
{
    var xx = x + i * xSeparation;

    draw_set_color(c_black);
    draw_set_halign(fa_middle);
    draw_set_valign(fa_top);
    draw_set_font(fDefault30);
    
    draw_text(xx + 64, y, str[i]);
    
    draw_set_halign(fa_left);
    draw_set_font(fDefault12);
    
    draw_text(xx + 10, y + 70, "Deaths: " + string(death[i]));
    draw_text(xx + 10, y + 90, "Time: " + timeStr[i]);
    
    draw_set_halign(fa_center);
    
    if (fileSelected &amp;&amp; i == savefileSelect)
    {
        if (!warningShow)
        {
            var displayText = "&lt; " + global.difficultyNames[difficultySelect + 1] + " &gt;";
            draw_text(xx + 65, y + 49, displayText);
        }
        else
        {
            draw_text(xx + 63, y - 100, "Are you sure#you want to#overwrite this save?");
            if (warningSelectYes)
            {
                draw_text(xx + 65, y + 49, "&lt; Yes &gt;");
            }
            else
            {
                draw_text(xx + 65, y + 49, "&lt; No &gt;");
            }
        }
    }
    
    if (exists[i])
    {        
        if ((!fileSelected) || (fileSelected &amp;&amp; i != savefileSelect))
        {
            var displayText = global.difficultyNames[difficulty[i] + 1];
            draw_text(xx + 65, y + 49, displayText);
        }
        
        draw_set_font(fDefault24);
        
        if (clear[i]) draw_text(xx + 63, y + 215, "Clear!!");
        
        if (boss[0,i]) draw_sprite(sprBossItem, -1, xx + 0,  y + 128);
        if (boss[1,i]) draw_sprite(sprBossItem, -1, xx + 32, y + 128);
        if (boss[2,i]) draw_sprite(sprBossItem, -1, xx + 64, y + 128);
        if (boss[3,i]) draw_sprite(sprBossItem, -1, xx + 96, y + 128);
        if (boss[4,i]) draw_sprite(sprBossItem, -1, xx + 0,  y + 160);
        if (boss[5,i]) draw_sprite(sprBossItem, -1, xx + 32, y + 160);
        if (boss[6,i]) draw_sprite(sprBossItem, -1, xx + 64, y + 160);
        if (boss[7,i]) draw_sprite(sprBossItem, -1, xx + 96, y + 160);
    }
    else
    {
        if ((!fileSelected) || (fileSelected &amp;&amp; i != savefileSelect))
        {
            draw_text(xx + 65, y + 49, "No Data");
        }
    }
    
    if (i == savefileSelect)
    {
        draw_sprite(sprCherry, animationIndex/15, xx+5,     y+310);
        draw_sprite(sprCherry, animationIndex/15, xx+25,    y+310);
        draw_sprite(sprCherry, animationIndex/15, xx+45,    y+310);
        draw_sprite(sprPlayerIdle, animationIndex/5, xx+65, y+310);
        draw_sprite(sprCherry, animationIndex/15, xx+85,    y+310);
        draw_sprite(sprCherry, animationIndex/15, xx+105,   y+310);
        draw_sprite(sprCherry, animationIndex/15, xx+125,   y+310);
    }
}

scrDrawButtonInfo(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
