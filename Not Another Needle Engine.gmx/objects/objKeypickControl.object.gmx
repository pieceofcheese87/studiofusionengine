<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Place this object in any room you want to use the keypick gimmick in
// Note: Key counts do NOT save

nkeys = 11; // update this if you add any more key types
for(var i=0; i&lt;nkeys; i++) {
    keyCount[i] = 0
}

global.kColor[0]  = c_white                    //master key
global.kColor[1]  = c_white                    //white 
global.kColor[2]  = make_color_rgb(141,91,191) //purple
global.kColor[3]  = make_color_rgb(214,143,73) //orange
global.kColor[4]  = make_color_rgb(54,48,41)   //black
global.kColor[5]  = make_color_rgb(80,175,175) //teal
global.kColor[6]  = make_color_rgb(53,159,80)  //green
global.kColor[7]  = make_color_rgb(200,55,55)  //red
global.kColor[8]  = make_color_rgb(112,64,16)  //brown
global.kColor[9]  = make_color_rgb(207,112,159)//pink
global.kColor[10] = make_color_rgb(95,113,160) //blue

usingMaster = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if usingMaster &amp;&amp; keyCount[K.MASTER] &lt; 1 {
    usingMaster = false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keysToDraw = ds_list_create();

for(i=0; i&lt;nkeys; i++) {
    with(objKey) {
        if k == other.i &amp;&amp; ds_list_find_index(other.keysToDraw,other.i) == -1 {
            ds_list_add(other.keysToDraw, other.i)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var j=0; j&lt;ds_list_size(keysToDraw); j++) {
    var k = ds_list_find_value(keysToDraw,j);
    
    var X = 16 + 96*floor(j/2);
    var Y = 16 + 64*(j%2);
    
    var spr = sprKey;
    if(k == K.MASTER) spr = sprMasterKey;
    
    draw_sprite_ext(spr,0,X,Y,1,1,0,global.kColor[k], 1)
    draw_set_halign(fa_left)
    draw_set_valign(fa_top)
    draw_set_font(fDefault18)
    scrDrawTextOutline(X+40,Y,"x "+string(keyCount[k]),c_white,c_black)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
