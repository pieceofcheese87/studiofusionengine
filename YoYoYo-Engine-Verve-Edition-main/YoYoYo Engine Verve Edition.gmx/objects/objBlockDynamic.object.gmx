<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBlockMask</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objBlock</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables

old_left = bbox_left;
old_right = bbox_right;
old_top = bbox_top;
old_bottom = bbox_bottom;

inst = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set old boundary variables for this frame's collision

old_left = bbox_left;
old_right = bbox_right;
old_top = bbox_top;
old_bottom = bbox_bottom;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Push instance

with(objBlockDynamic) { solid = false; }

if (inst != noone)
{
    if (place_meeting(x, y, inst))
    {
        var moveX = 0, moveY = 0;
                                      
        //Push horizontally
        if (inst.bbox_bottom - (inst.y - inst.yold) &gt;= old_top &amp;&amp; inst.bbox_top - (inst.y - inst.yold) &lt;= old_bottom)
        {
            if (inst.bbox_left - (inst.x - inst.xold) &gt;= old_right)
            {
                moveX = bbox_right - inst.bbox_left + 1;
                moveX += ((inst.x + moveX) % 2 == 1.5);
            }
            else if (inst.bbox_right - (inst.x - inst.xold) &lt;= old_left)
            {
                moveX = bbox_left - inst.bbox_right - 1;
                moveX -= ((inst.x + moveX) % 2 == 0.5);
            }   
            if (moveX != 0)
            {
                with(inst)
                {
                    if (place_free(x + moveX, y))
                    {
                        x += moveX;
                    }
                }
            }
        }
        
        //Push vertically
        if (inst.bbox_right - (inst.x - inst.xold) &gt;= old_left &amp;&amp; inst.bbox_left - (inst.x - inst.xold) &lt;= old_right)
        {
            if (inst.bbox_top - (inst.y - inst.yold) &gt;= old_bottom)
            {
                moveY = bbox_bottom - inst.bbox_top + 1;
                moveY += ((inst.y + moveY) % 2 == 1.5);
            }
            else if (inst.bbox_bottom - (inst.y - inst.yold) &lt;= old_top)
            {
                moveY = bbox_top - inst.bbox_bottom - 1;
                moveY -= ((inst.y + moveY) % 2 == 0.5);
            }
            if (moveY != 0)
            {
                with(inst)
                {
                    if (place_free(x, y + moveY))
                    {
                        y += moveY;
                    }
                }
            }
        }
    }
}

with(objBlockDynamic) { solid = true; }   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Carry instance

with(objBlockDynamic) { solid = false; }

if (inst != noone)
{
    if (collision_rectangle(old_left, old_top - global.grav, old_right, old_bottom - global.grav, inst, true, true))
    {
        var carryX = mean(bbox_left, bbox_right) - mean(old_left, old_right);
        var carryY = bbox_top - inst.bbox_bottom - 1;
        with(inst)
        {                                     
            if (carryX != 0)
            {                                             
                if (place_free(x + carryX, y))
                {
                    x += carryX;
                }
                else
                {                           
                    move_contact_solid(180 * (carryX &lt; 0), abs(carryX));
                }
            }
            if (carryY &gt; 0)
            {              
                if (place_free(x, y + carryY))
                {
                    y += carryY;
                }             
                else
                {
                    move_contact_solid(270, carryY);
                }
            }
        }
    }
}

with(objBlockDynamic) { solid = true; }   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
