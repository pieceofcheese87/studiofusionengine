<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDoor1</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objBlock</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// change in creation code
k = K.WHITE //door type

// don't change
n = 1 //how many keys to open
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if objKeypickControl.keyCount[k] &gt;= n || (k != K.MASTER &amp;&amp; objKeypickControl.usingMaster &amp;&amp; objKeypickControl.keyCount[K.MASTER] &gt;= 1) {

    if collision_rectangle(x-1,y,x+sprite_width+1,y+sprite_height,objPlayer,0,0) || collision_rectangle(x,y-1,x+sprite_width,y+sprite_height+1,objPlayer,0,0) {
       
            //open the door
            audio_play_sound(sndDoor,0,0)
            
            if (k != K.MASTER &amp;&amp; objKeypickControl.usingMaster &amp;&amp; objKeypickControl.keyCount[K.MASTER] &gt;= 1) {
                objKeypickControl.keyCount[K.MASTER] -= 1
                objKeypickControl.usingMaster = false
            }
            else {
                objKeypickControl.keyCount[k] -= n
            }
            
            //create particles
            for(var i=0; i&lt;(sprite_width/16); i++) {
                for(var j=0; j&lt;(sprite_height/16); j++) {
                    with instance_create(x+(i+16),y+(j*16),objDoorBreak)
                        image_blend = other.image_blend
                }
            }
            
            instance_destroy()
            
       }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend = global.kColor[k]

if !instance_exists(objKeypickControl) {
    show_debug_message("You need to place objKeypickControl in the room to use keys/doors!")
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
